$user-menu-width-mobile: 21rem;
$mobile-max-width: 768px;
$avatar-size: 6.5rem;
$avatar-top-margin: 0.5rem;
$avatar-right-margin: 2rem;
$user-menu-border-width-mobile: 0.5rem;

.user-menu {
  display: flex;
  position: absolute;
  top: 1.5rem;
  right: $avatar-right-margin;
  z-index: 100;

  transition: top 0.2s;

  &.logged-in,
  &.logging-in {
    top: #{$avatar-top-margin};
  }

  &.logging-in .avatar {
    border-color: $red-darkened;

    background-color: $grey-darkened;
    animation-name: opacity-flutter;
    animation-duration: 1s;
    animation-iteration-count: infinite;
  }

  header {
    margin-top: 0.5rem;

    color: $grey;

    font-size: 0.7em;
    font-weight: bold;
  }

  .menu {
    display: flex;
    position: fixed;

    flex-flow: column nowrap;
    align-items: stretch;
    align-content: stretch;
    justify-content: flex-start;

    order: 1;
    flex-shrink: 0;

    padding: 0;

    border-width: 0.2rem;
    border-style: solid;
    border-color: $red;

    background-color: $black;
    transition: transform 0.2s, box-shadow 0.2s;

    text-align: center;
    white-space: nowrap;

    overflow: hidden;

    > ul {
      > li {
        &:not(:last-child) {
          border-bottom: 1px solid $black-lightened;
        }

        ul {
          background-color: $black;

          &:first-child {
            padding: 1rem 0;
          }

          &:not(:first-child) {
            padding: 0 0 1rem;
          }

          a {
            display: block;
            position: relative;

            padding: 0.5rem 2rem;

            color: $white;

            text-decoration: none;
            transition-property: background-color, color;
            transition-duration: 0.1s;

            &::before {
              position: absolute;
              top: 0;
              right: initial;
              bottom: 0;
              left: 0%;
              z-index: 0;

              content: '';
              width: 0;

              background-color: $red;
              transition: all 0.2s;
            }

            span {
              position: relative;
              z-index: 1;
            }
          }

          .logout a {
            color: $red;
          }

          .logout a,
          a {
            &:hover {
              color: $white;

              &::before {
                width: 100%;
              }
            }
          }
        }
      }
    }

    @media not screen and (max-width: $mobile-max-width) {
      top: #{$avatar-top-margin + (($avatar-size - 4rem) / 2)};
      right: #{$avatar-right-margin + (($avatar-size - 4rem) / 2)};

      max-width: 4rem;
      max-height: 4rem;

      transition:
        top 0.2s,
        right 0.2s,
        max-height 0.2s,
        max-width 0.2s;
    }
  }

  .avatar {
    z-index: 5;

    order: 2;

    transition: border-color 0.2s, border-radius 0.2s, border-width 0.2s, transform 0.2s, box-shadow 0.2s;

    cursor: pointer;
  }

  .avatar:hover,
  .avatar:focus {
    border-width: 0.4rem;
  }

  .avatar:active {
    transform: scale(0.9);

    transition-duration: 0.1s;
  }

  @media not screen and (max-width: $mobile-max-width) {
    #UserMenuControl:checked {
      ~ .menu {
        top: #{($avatar-size / 2) + 1rem};
        right: #{($avatar-size / 2) + 2.5rem};

        max-width: 16rem;
        max-height: 35rem;
      }
    }
  }
  @media only screen and (max-width: $mobile-max-width) {
    &:not(.logged-in) > button.login {
      border-color: $black-lightened;

      background-color: $black-lightened;
      color: $grey;

      &:hover {
        border-color: $black-lightened;

        background-color: $red;
        color: $white;
      }
    }
  }
}

#UserMenuControl {
  display: none;
}

@media only screen and (max-width: $mobile-max-width) {
  #UserMenuControl {
    &:checked {
      ~ .menu {
        transform: translateX(-$user-menu-width-mobile);
      }

      ~ #UserMenuToggle {
        $umt-mobile-translate:
          translateX(
            #{
              -1 * (($user-menu-width-mobile / 2) - ($avatar-size / 2) - $avatar-right-margin - ($user-menu-border-width-mobile / 2))
            }
          );
        transform: $umt-mobile-translate;

        &:active {
          transform: $umt-mobile-translate scale(0.9);
          transition-duration: 0.1s;
        }
      }
    }

    &:not(:checked) ~ #UserMenuToggle {
      border-color: $black-lightened;
    }

    ~ .menu {
      top: 0;
      bottom: 0;
      left: 100%;

      width: $user-menu-width-mobile;
      padding-top: #{$avatar-size + 1rem};

      border-top: 0;
      border-right: 0;
      border-bottom: 0;
      border-left: $user-menu-border-width-mobile solid $red;


      box-shadow: 0 0 4px 0 rgba($black, 0.4);

      transform: translateX(0);
      overflow: auto;

      nav a {
        padding: 1rem;
      }
    }
  }

  .user-menu header {
    margin-top: 1rem;
  }
}
